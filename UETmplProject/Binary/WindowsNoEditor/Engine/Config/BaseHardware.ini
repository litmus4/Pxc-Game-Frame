;
; Base Driver Blacklist
; =====================
;
; Hardware checks are controlled by the console variable "r.WarnOfBadDrivers". The the console variable options for more information.
;
; What to do when a certain driver or hardware shows problems:
;  - If the driver exhibiting the problem is old, add it to the blacklist with "<=". In general it's better to ask users to upgrade.
;  - If the driver exhibiting the problem is the latest, add it to the blacklist with ">=". We should not assume the next driver version fixes the problem.
;
; Expectations on QA:
;  - QA always tests the latest driver version.
;  - When a new driver is released, QA should test it and if it does not introduce bugs the SuggestedDriverVersion should be updated to the latest driver.
;  - If the latest driver is blacklisted, it is not removed until QA verifies it is fixed.
;  - If driver specific bugs are found, enter them in JIRA so that they can be tracked.
;
; Expectations on Engineering:
;  - Bugs on older drivers are added to the blacklist and otherwise ignored.
;  - Bugs on the latest driver are added to the blacklist but treated as critical bugs for which we must try to find a workaround. We must also notify the IHV to help if we cannot find the problem.
;
; INI sections:
;    [GPU_NVIDIA] [GPU_AMD] [GPU_Intel]
;
; Explanation of the INI entries:
;  - "SuggestedDriverVersion": string used to communicate to the user which driver version is appropriate (not used by any code), empty if unknown
;  - "Blacklist": array of tests that can be made to mark a driver or a range of them as problematic
;    "DriverVersion": to compare against the "unified driver" (see log) version e.g. "123.45.2" "==123.45" "<123.45", comparison operators: == != > < >= <=
;    "Reason": string used to document the reason for blacklisting the driver, could be shown to the user
;    comment above each blacklist entry: more details about the problem, potential workarounds
;
;-----------------------------------------------------------------------------------------------------------------

[GPU_NVIDIA]
; a newer one is out but has issues (see below)
SuggestedDriverVersion="441.20"

; Seems this driver was not setting uninitialized global variables
; (static, non const) to 0 but leaving them uninitialized.
; Also blacklist future driver versions until QA has verified them to work.
; NOTE: UE-25096 has been fixed and verified by QA.
;+Blacklist=(DriverVersion=">=361.43", Reason="UE-25096 Viewport flashes black and white when moving in the scene on latest NVIDIA drivers")

; To prevent problems with older drivers.
; We might have to adjust that further.
+Blacklist=(DriverVersion="<=347.09", Reason="Crashes with Paragon content using more recent GPU features")

; UE-35288, GPU hangs in 4.13 binary release.
+Blacklist=(DriverVersion="==372.70", Reason="This driver version has many known stability issues")

; UE-58673, GPU memory leak and hitching.
+Blacklist=(DriverVersion="==388.31", Reason="This driver version has known stability issues")
+Blacklist=(DriverVersion="==388.43", Reason="This driver version has known stability issues")
+Blacklist=(DriverVersion="==388.71", Reason="This driver version has known stability issues")

;-----------------------------------------------------------------------------------------------------------------

[GPU_AMD]
; From OR-27051 as of 8/4/2016 is 16.300.2311.0 7/18/2016 (Crimson Edition 16.9.2)
SuggestedDriverVersion="19.11.1"

; From OR-27051
+Blacklist=(DriverVersion="==15.300.1025.1001", Reason="Crashes with Paragon content using more recent GPU features")

; 14.301.1001.0 - 13.152.1.1000 are the AMD drivers that seem to be causing crashes when we try to compile a compute shader.
+Blacklist=(DriverVersion="<=14.301.1001.0", Reason="Crashes with Paragon content using more recent GPU features")

;-----------------------------------------------------------------------------------------------------------------

[GPU_Intel]
SuggestedDriverVersion=""
